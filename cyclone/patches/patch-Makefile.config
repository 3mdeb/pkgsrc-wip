$NetBSD$

1) Don't let CFLAGS and LDFLAGS override search paths
   for the local part of the build.

2) Set the RPATH when creating executables and shared libraries.

--- Makefile.config.orig	2019-12-30 23:58:30.000000000 +0000
+++ Makefile.config
@@ -16,13 +16,15 @@ OS = $(shell uname)
 CC ?= cc
 
 LIBS = -pthread -lcyclone -lck -lm -lcyclonebn
-ifneq ($(OS),FreeBSD)
+ifeq (,$(findstring $(OS),FreeBSD NetBSD OpenBSD DragonFly))
 # libdl is part of libc on FreeBSD
 LIBS += -ldl
 endif
 
 # Compiler options
 CFLAGS       ?= $(CYC_PROFILING) $(CYC_GCC_OPT_FLAGS) -fPIC -Wall -Wno-shift-negative-value -Wno-unused-command-line-argument -Iinclude
+CFLAGS       ?= $(CYC_PROFILING) $(CYC_GCC_OPT_FLAGS)
+CFLAGS       += -fPIC -Wall -Wno-shift-negative-value -Wno-unused-command-line-argument -Iinclude
 BASE_CFLAGS  ?= $(CYC_PROFILING) $(CYC_GCC_OPT_FLAGS) -fPIC -Wall -Wno-shift-negative-value -Wno-unused-command-line-argument -I$(PREFIX)/include
 # Used by Cyclone to compile programs, no need for PIC there
 BASE_PROG_CFLAGS  ?= $(CYC_PROFILING) $(CYC_GCC_OPT_FLAGS) -Wall -I$(PREFIX)/include
@@ -39,7 +41,8 @@ endif
 #CFLAGS = -g -pg -Wall
 
 # Linker options
-LDFLAGS ?= -L. $(CYC_PROFILING)
+LDFLAGS ?= $(CYC_PROFILING)
+LDFLAGS += -L.
 LIBRARY_OUTPUT_FILE = libcyclone.a
 ifeq ($(OS),Darwin)
 LDFLAGS     += -Wl,-undefined -Wl,dynamic_lookup
@@ -63,9 +66,9 @@ endif
 
 # Commands "baked into" cyclone for invoking the C compiler
 CC_PROG ?= "$(CC) ~src-file~ $(COMP_PROG_CFLAGS) -c -o ~exec-file~.o"
-CC_EXEC ?= "$(CC) ~exec-file~.o ~obj-files~ $(LIBS) $(COMP_CFLAGS) -o ~exec-file~"
+CC_EXEC ?= "$(CC) ~exec-file~.o ~obj-files~ $(LIBS) $(COMP_CFLAGS) $(COMPILER_RPATH_FLAG)$(PREFIX)/lib -o ~exec-file~"
 CC_LIB  ?= "$(CC) ~src-file~ $(COMP_CFLAGS) -c -o ~exec-file~.o"
-CC_SO   ?= "$(CC) -shared $(LDFLAGS) -o ~exec-file~.so ~exec-file~.o"
+CC_SO   ?= "$(CC) -shared $(LDFLAGS) $(COMPILER_RPATH_FLAG)$(PREFIX)/lib -o ~exec-file~.so ~exec-file~.o"
 
 AR        ?= ar
 LIBTOOL   ?= libtool
