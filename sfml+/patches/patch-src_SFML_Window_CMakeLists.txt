$NetBSD$

--- src/SFML/Window/CMakeLists.txt.orig	2015-08-24 16:01:06.000000000 +0000
+++ src/SFML/Window/CMakeLists.txt
@@ -69,7 +69,7 @@ if(SFML_OS_WINDOWS)
 
     # make sure that we use the Unicode version of the Win API functions
     add_definitions(-DUNICODE -D_UNICODE)
-elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD)
+elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_NETBSD)
     set(PLATFORM_SRC
         ${SRCROOT}/Unix/Display.cpp
         ${SRCROOT}/Unix/Display.hpp
@@ -98,7 +98,7 @@ elseif(SFML_OS_LINUX OR SFML_OS_FREEBSD)
             ${SRCROOT}/Unix/JoystickImpl.cpp
             ${SRCROOT}/Unix/JoystickImpl.hpp
         )
-    elseif(SFML_OS_FREEBSD)
+    elseif(SFML_OS_FREEBSD OR SFML_OS_NETBSD)
         set(PLATFORM_SRC
             ${PLATFORM_SRC}
             ${SRCROOT}/FreeBSD/JoystickImpl.cpp
@@ -188,7 +188,7 @@ elseif(SFML_OS_ANDROID)
 endif()
 
 # find external libraries
-if(SFML_OS_LINUX OR SFML_OS_FREEBSD)
+if(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_NETBSD)
     find_package(X11 REQUIRED)
     if(NOT X11_FOUND)
         message(FATAL_ERROR "X11 library not found")
@@ -198,7 +198,7 @@ endif()
 if(NOT SFML_OPENGL_ES)
     find_package(OpenGL REQUIRED)
     include_directories(${OPENGL_INCLUDE_DIR})
-    if(SFML_OS_LINUX OR SFML_OS_FREEBSD)
+    if(SFML_OS_LINUX OR SFML_OS_FREEBSD OR SFML_OS_NETBSD)
         find_package(XCB COMPONENTS xlib_xcb image randr REQUIRED)
         if(NOT LIBXCB_FOUND)
             message(FATAL_ERROR "Xcb library not found")
@@ -225,7 +225,7 @@ if(SFML_OS_WINDOWS)
     list(APPEND WINDOW_EXT_LIBS winmm gdi32)
 elseif(SFML_OS_LINUX)
     list(APPEND WINDOW_EXT_LIBS ${X11_X11_LIB} ${LIBXCB_LIBRARIES} ${UDEV_LIBRARIES})
-elseif(SFML_OS_FREEBSD)
+elseif(SFML_OS_FREEBSD OR SFML_OS_NETBSD)
     list(APPEND WINDOW_EXT_LIBS ${X11_X11_LIB} ${LIBXCB_LIBRARIES} usbhid)
 elseif(SFML_OS_MACOSX)
     list(APPEND WINDOW_EXT_LIBS "-framework Foundation -framework AppKit -framework IOKit -framework Carbon")
