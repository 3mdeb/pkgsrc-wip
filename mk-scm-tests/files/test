#! /usr/pkg/bin/bash
set -eu

step() {
	echo ""
	echo "T: $*" 1>&2
}

die() {
	echo "E: $*" 1>&2
	exit 1
}

setup_cvs_repository() {
	cvs -d "$repodir" init
	mkdir "$repodir/pkgbase"
	# CVS doesn't let the user fake the dates, therefore it was easier
	# to just manipulate the internal repository representation.
	cat <<EOF >"$repodir/pkgbase/today,v"
head	1.3;
access;
symbols
	v2017:1.1;
locks; strict;
comment	@# @;


1.3
date	2018.03.01.00.00.00;	author rillig;	state Exp;
branches;
next	1.2;

1.2
date	2018.01.01.00.00.00;	author rillig;	state Exp;
branches;
next	1.1;

1.1
date	2017.01.01.00.00.00;	author rillig;	state Exp;
branches;
next	;


desc
@@


1.3
log
@today is 2018-03-01
@
text
@2018-03-01
@


1.2
log
@today is 2018-01-01
@
text
@d1 1
a1 1
2018-01-01
@


1.1
log
@today is 2017-01-01
@
text
@d1 1
a1 1
2017-01-01
@


EOF
}

setup_fossil_repository() {
	mkdir -p "$repodir/pkgbase"
	pushd "$repodir/pkgbase"
	fossil init --date-override "2017-01-01" pkgbase.fossil
	fossil open "pkgbase.fossil"

	echo "2017-01-01" > today
	fossil add today
	fossil commit -m "today is 2017-01-01" --date-override "2017-01-01" --hash -- today
	fossil tag add --date-override "2017-01-01 00:00:01" v2017 tip

	echo "2018-01-01" > today
	fossil add today
	fossil commit -m "today is 2018-01-01" --date-override "2018-01-01" --hash -- today

	echo "2018-03-01" > today
	fossil commit -m "today is 2018-03-01" --date-override "2018-03-01" --hash -- today

	popd
}

setup_git_repository() {
	git init "$repodir/pkgbase"
	pushd "$repodir/pkgbase"

	echo "2017-01-01" > today
	git add today
	GIT_AUTHOR_DATE="2017-01-01T00:00:00Z" GIT_COMMITTER_DATE="2017-01-01T00:00:00Z" \
		git commit -m "today is 2017-01-01" -- today
	git tag v2017

	echo "2018-01-01" > today
	git add today
	GIT_AUTHOR_DATE="2018-01-01T00:00:00Z" GIT_COMMITTER_DATE="2018-01-01T00:00:00Z" \
		git commit -m "today is 2018-01-01" -- today

	echo "2018-03-01" > today
	GIT_AUTHOR_DATE="2018-03-01T00:00:00Z" GIT_COMMITTER_DATE="2018-03-01T00:00:00Z" \
		git commit -m "today is 2018-03-01" -- today

	popd
}

setup_hg_repository() {
	hg init "$repodir/pkgbase"
	pushd "$repodir/pkgbase"

	echo "2017-01-01" > today
	hg add today
	hg commit -m "today is 2017-01-01" -d "2017-01-01T00:00:00Z" -u "user" -- today
	hg tag -u "user" v2017

	echo "2018-01-01" > today
	hg add today
	hg commit -m "today is 2018-01-01" -d "2018-01-01T00:00:00Z" -u "user" -- today

	echo "2018-03-01" > today
	hg commit -m "today is 2018-03-01" -d "2018-03-01T00:00:00Z" -u "user" -- today

	popd
}

setup_svn_repository() {
	mkdir "$repodir"
	svnadmin create "$repodir/pkgbase"
	hook="$repodir/pkgbase/hooks/pre-revprop-change"
	printf '%s\n' '#! /bin/sh' '# allow everything' > "$hook"
	chmod +x "$hook"
	svn checkout "file://$repodir/pkgbase" "$basedir/svnwork"
	pushd "$basedir/svnwork"
	mkdir "trunk"
	cd "trunk"

	echo "2017-01-01" > today
	svn add .
	svn commit -m "today is 2017-01-01"
	svn propset "svn:date" --revprop -r HEAD "2017-01-01T00:00:00.000000Z"

	svn -m "v2017" --parents copy "file://$repodir/pkgbase/trunk" "file://$repodir/pkgbase/tags/v2017"
	svn propset "svn:date" --revprop -r HEAD "2017-01-01T00:00:00.000001Z"

	echo "2018-01-01" > today
	svn commit -m "today is 2018-01-01"
	svn propset "svn:date" --revprop -r HEAD "2018-01-01T00:00:00.000000Z"

	echo "2018-03-01" > today
	svn commit -m "today is 2018-03-01"
	svn propset "svn:date" --revprop -r HEAD "2018-03-01T00:00:00.000000Z"

	popd
}

pkgsrc_make() {
	bmake=`type "bmake" 1>/dev/null 2>&1 && echo "bmake" || echo "make"`
	DISTDIR="$basedir/distfiles" "$bmake" "$@"
}

assert_that() {
	case "${1-}${3+:}${3-}${5+:}${5-}${7+:}${7-}" in
	("--file:--has-content")
		actual=`cat "$2"`
		[ "$4" = "$actual" ] || die "expected file $2 to contain \"$4\", but found \"$actual\"."
		;;
	(*)	die "assert_that called with invalid arguments: $*"
	esac
}

test_scm() { # usage: test_scm scm-name
	case "$1" in
	(cvs)		scm_display_name="CVS"		scm_tag_varname="CVS_TAG"	;;
	(fossil)	scm_display_name="Fossil"	scm_tag_varname="FOSSIL_VERSION";;
	(git)		scm_display_name="Git"		scm_tag_varname="GIT_TAG"	;;
	(hg)		scm_display_name="Mercurial"	scm_tag_varname="HG_TAG"	;;
	(svn)		scm_display_name="Subversion"	scm_tag_varname=""		;;
	esac

	# Sets up a repository in $repodir, with these commits:
	# - at 2017-01-01TZ, the file "today" contains "2017-01-01".
	#   - this commit is tagged v2017.
	# - at 2018-01-01TZ, the file "today" contains "2018-01-01".
	# - at 2018-03-01TZ, the file "today" contains "2018-03-01".
	#
	step "Setting up $scm_display_name repository"
	rm -rf "$repodir"
	setup_${1}_repository
	wrkdir=`pkgsrc_make show-var VARNAME=WRKDIR`

	step "Testing $scm_display_name"
	SCM_UNDER_TEST="$1" pkgsrc_make clean
	SCM_UNDER_TEST="$1" pkgsrc_make patch

	assert_that --file "$wrkdir/pkgbase/today" --has-content "2018-03-01"

	step "Testing $scm_display_name with CHECKOUT_DATE"
	SCM_UNDER_TEST="$1" pkgsrc_make clean
	SCM_UNDER_TEST="$1" CHECKOUT_DATE="2018-02-01" pkgsrc_make patch

	assert_that --file "$wrkdir/pkgbase/today" --has-content "2018-01-01"

	if [ "$scm_tag_varname" ]; then
		step "Testing $scm_display_name with tagged checkout"
		SCM_UNDER_TEST="$1" pkgsrc_make clean
		eval "SCM_UNDER_TEST=\"\$1\" $scm_tag_varname=\"v2017\" pkgsrc_make patch"

		assert_that --file "$wrkdir/pkgbase/today" --has-content "2017-01-01"
	fi

	step "Dumping API variables for $scm_display_name (for manual inspection)"
	SCM_UNDER_TEST="$1" pkgsrc_make clean
	SCM_UNDER_TEST="$1" pkgsrc_make "show-all-$1"
}

main() {
	basedir="$PWD/tmp"
	repodir="$basedir/repo"
	rm -rf "$basedir"
	mkdir "$basedir"

	test_scm "cvs"
	test_scm "fossil"
	test_scm "git"
	test_scm "hg"
	test_scm "svn"

	rm -rf "$basedir"
	step "OK"
}

main
