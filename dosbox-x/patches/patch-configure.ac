$NetBSD$

Fix == test in configure script.

--- configure.ac.orig	2018-07-01 16:48:05.000000000 +0000
+++ configure.ac
@@ -159,14 +159,14 @@ AC_ARG_ENABLE(hx-dos,AC_HELP_STRING([--e
 dnl Some stuff for the icon.
 case "$host" in
     *-*-cygwin* | *-*-mingw32*)
-    if test x$enable_hx == xyes; then
+    if test x$enable_hx = xyes; then
         CXXFLAGS="$CXXFLAGS -DHX_DOS"
         AC_DEFINE(C_HX_DOS,1,[Targeting HX DOS extender])
     fi
     ;;
 esac
 
-if test x$enable_force_menu_sdldraw == xyes; then
+if test x$enable_force_menu_sdldraw = xyes; then
     CXXFLAGS="$CXXFLAGS -DFORCE_SDLDRAW"
     AC_DEFINE(C_FORCE_MENU_SDLDRAW,1,[Force SDL drawn menus])
 fi
@@ -359,7 +359,7 @@ case "$host" in
        ;;
 esac
 
-AM_CONDITIONAL(MACOSX, test x"$macosx" == x"1")
+AM_CONDITIONAL(MACOSX, test x"$macosx" = x"1")
 
 dnl The target cpu checks for dynamic cores
 AH_TEMPLATE(C_TARGETCPU,[The type of cpu this target has])
@@ -497,7 +497,7 @@ fi
 dnl FEATURE: xBRZ
 AH_TEMPLATE(C_XBRZ,[Define to 1 to enable XBRZ scaler])
 AC_ARG_ENABLE(xbrz,AC_HELP_STRING([--enable-xbrz],[compile with xBRZ scaler (default yes)]),enable_xbrz=$enableval,enable_xbrz=yes)
-AM_CONDITIONAL(C_XBRZ, test "x$enable_xbrz" == "xyes")
+AM_CONDITIONAL(C_XBRZ, test "x$enable_xbrz" = "xyes")
 if test x$enable_xbrz = xyes; then
 AC_DEFINE(C_XBRZ,1)
 fi
@@ -542,7 +542,7 @@ else
   enable_mt32=no
   AC_MSG_RESULT(no)
 fi 
-AM_CONDITIONAL(C_MT32, test "x$enable_mt32" == "xyes")
+AM_CONDITIONAL(C_MT32, test "x$enable_mt32" = "xyes")
 
 dnl FEATURE: DEBUG and HEAVY DEBUG options (debugger)
 AH_TEMPLATE(C_DEBUG,[Define to 1 to enable internal debugger, requires libcurses])
