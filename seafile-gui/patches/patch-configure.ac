$NetBSD$
Patch for BSD detection with kvm & libinotify.
--- configure.ac.orig	2017-01-14 21:53:11.062111383 +0000
+++ configure.ac	2017-01-14 21:35:50.000000000 +0000
@@ -43,6 +43,15 @@
   AC_MSG_RESULT(no)
 fi
 
+AC_MSG_CHECKING(for BSD)
+if test `uname | grep -e BSD -e DragonFly | wc -l` = "1"; then
+  bbsd=true
+  AC_MSG_RESULT(compile in BSD)
+else
+  AC_MSG_RESULT(no)
+fi
+
+
 AC_MSG_CHECKING(for Mac)
 if test "$(uname)" = "Darwin"; then
   bmac=true
@@ -52,7 +61,7 @@
 fi
 
 AC_MSG_CHECKING(for Linux)
-if test "$bmac" != "true" -a "$bwin32" != "true"; then
+if test "$bmac" != "true" -a "$bwin32" != "true"; -a "$bbsd" != "true"; then
   blinux=true
   AC_MSG_RESULT(compile in linux)
 else
@@ -62,7 +71,7 @@
 AM_CONDITIONAL([WIN32], [test "$bwin32" = "true"])
 AM_CONDITIONAL([MACOS], [test "$bmac" = "true"])
 AM_CONDITIONAL([LINUX], [test "$blinux" = "true"])
-
+AM_CONDITIONAL([BSD], [test "$bbsd" = "true"])
 
 # check libraries
 if test "$bwin32" != true; then
@@ -91,6 +100,11 @@
 fi
 AC_SUBST(CONSOLE)
 
+if test "$bbsd" = true; then
+    AC_ARG_ENABLE(fuse, AC_HELP_STRING([--enable-fuse], [enable fuse virtual file system]),
+	[compile_fuse=$enableval],[compile_fuse="no"])
+fi
+
 if test "$bwin32" = true; then
   LIB_WS32=-lws2_32
   LIB_GDI32=-lgdi32
@@ -105,6 +119,8 @@
   LIB_MAC=
   MSVC_CFLAGS="-D__MSVCRT__ -D__MSVCRT_VERSION__=0x0601"
   LIB_CRYPT32=-lcrypt32
+  LIB_INOTIFY=
+  LIB_KVM=
 elif test "$bmac" = true ; then
   LIB_WS32=
   LIB_GDI32=
@@ -119,6 +135,24 @@
   LIB_MAC="-framework CoreServices"
   LIB_CRYPT32=
   LIB_ICONV=-liconv
+  LIB_INOTIFY=
+  LIB_KVM=
+elif test "$bbsd" = true ; then
+  LIB_WS32=
+  LIB_GDI32=
+  LIB_RT=
+  LIB_INTL=
+  LIB_RESOLV=
+  LIB_UUID=-luuid
+  LIB_IPHLPAPI=
+  LIB_SHELL32=
+  LIB_PSAPI=
+  LIB_MAC=
+  MSVC_FLAGS=
+  LIB_CRYPT32=
+  LIB_ICONV=-liconv
+  LIB_INOTIFY=-linotify
+  LIB_KVM=-lkvm
 else
   LIB_WS32=
   LIB_GDI32=
@@ -132,6 +166,8 @@
   LIB_MAC=
   MSVC_CFLAGS=
   LIB_CRYPT32=
+  LIB_INOTIFY=-linotify
+  LIB_KVM=
 fi
 
 AC_SUBST(LIB_WS32)
@@ -144,6 +180,8 @@
 AC_SUBST(LIB_SHELL32)
 AC_SUBST(LIB_PSAPI)
 AC_SUBST(LIB_MAC)
+AC_SUBST(LIB_INOTIFY)
+AC_SUBST(LIB_KVM)
 AC_SUBST(MSVC_CFLAGS)
 AC_SUBST(LIB_CRYPT32)
 AC_SUBST(LIB_ICONV)
