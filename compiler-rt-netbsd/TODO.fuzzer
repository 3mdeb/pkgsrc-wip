compiler-rt profile v.s. -pg
I. compiler-rt profile
  Similar to GCC gcov tool, LLVM can provide llvm-cov to interpret profiling data for each line of code.
  One can add "--coverage" or "-fcoverage-mapping" flags to generate necessary information for this tool.
  This is pure software method, which means the information is generated from AST or something else.
II. -pg
  This flag is usually used to collect information for gprof. The unit is function instead of source line.
Summary:
  The basic units of profiling are different. llvm-cov/gcov is line-based, while gprof is function-based.
Do we need llvm-cov for libFuzzer?
  I don't think so. It seems there is no relationship between these two. However, there is something named
  "SanitizerCoverage"(https://clang.llvm.org/docs/SanitizerCoverage.html) utilizing sanitizer to help with
  profiling. But I still think they are necessary for libFuzzer itself.


$ make check-fuzzer

********************
Testing Time: 694.80s
********************
Failing Tests (21):
    LLVMFuzzer :: cxxstring.test
    LLVMFuzzer :: equivalence-signals.test
    LLVMFuzzer :: equivalence.test
    LLVMFuzzer :: fuzzer-leak.test
    LLVMFuzzer :: fuzzer-oom.test
    LLVMFuzzer :: fuzzer-timeout.test
    LLVMFuzzer :: memcmp.test
    LLVMFuzzer :: memcmp64.test
    LLVMFuzzer :: merge-posix.test
    LLVMFuzzer :: recommended-dictionary.test
    LLVMFuzzer :: strcmp.test
    LLVMFuzzer :: strncmp.test
    LLVMFuzzer :: strstr.test
    LLVMFuzzer :: trace-malloc-threaded.test
    LLVMFuzzer :: trace-malloc-unbalanced.test
    LLVMFuzzer :: value-profile-cmp.test
    LLVMFuzzer :: value-profile-load.test
    LLVMFuzzer :: value-profile-mem.test
    LLVMFuzzer :: value-profile-set.test
    LLVMFuzzer :: value-profile-strcmp.test
    LLVMFuzzer :: value-profile-strncmp.test

  Expected Passes    : 87
  Unsupported Tests  : 6
  Unexpected Failures: 21

libFuzzer Failed cases (make check-fuzzer):
I. kernel panic
  fuzzer-oom.test kills the kernel (panic due to lack of memory)

  workaround: kill it quickly or disable

II. hangs
  fuzzer-timeout.test
  value-profile*

  workaround: kill with pkill(1) or kill(1)

III. Complex One
  70. afl-driver-extra-stats.test
    Not sure yet.

IV. Unknown
  the rest
