compiler-rt profile v.s. -pg
I. compiler-rt profile
  Similar to GCC gcov tool, LLVM can provide llvm-cov to interpret profiling data for each line of code.
  One can add "--coverage" or "-fcoverage-mapping" flags to generate necessary information for this tool.
  This is pure software method, which means the information is generated from AST or something else.
II. -pg
  This flag is usually used to collect information for gprof. The unit is function instead of source line.
Summary:
  The basic units of profiling are different. llvm-cov/gcov is line-based, while gprof is function-based.
Do we need llvm-cov for libFuzzer?
  I don't think so. It seems there is no relationship between these two.
III. SanitizerCoverage (https://clang.llvm.org/docs/SanitizerCoverage.html)
  There are command line arguments like:
    -fsanitize-coverage=trace-pc-guard,indirect-calls,trace-gep,trace-div,trace-cmp
  We would like to cover them in llvm / clang tests (wherever applicable). At least covering
  the netbsd--x86_64 target.
  Examples of tests: clang/test/Driver/fsanitize-coverage.c clang/test/Driver/fuzzer.c
  It seams that these features aren't functional on NetBSD for unknown reason.
  SanitizerCoverage is required for at least a part of the libfuzzer functionality.

sanitizers:
 - ASan (amd64, i386), UBSan (all ports), MSan (amd64), TSan (amd64) - ported and mostly functional
 - LSan - in progresss (scheduled after ptrace(2) kernel fixes)
 - src/ integration - TODO:
  * import compiler-rt into src/
  * add Makefile glue to build and install compiler-rt features (check cmake/config-ix.cmake)
    along the MKLLVM target
  * add MKSANITIZER build option, to prebuild libraries and programs with a desired sanitizer

$ make check-fuzzer

********************
Testing Time: 328.39s
********************
Failing Tests (19):
    LLVMFuzzer :: cxxstring.test
    LLVMFuzzer :: fuzzer-leak.test
    LLVMFuzzer :: fuzzer-oom.test
    LLVMFuzzer :: fuzzer-timeout.test
    LLVMFuzzer :: memcmp.test
    LLVMFuzzer :: memcmp64.test
    LLVMFuzzer :: merge-posix.test
    LLVMFuzzer :: recommended-dictionary.test
    LLVMFuzzer :: strcmp.test
    LLVMFuzzer :: strncmp.test
    LLVMFuzzer :: strstr.test
    LLVMFuzzer :: trace-malloc-threaded.test
    LLVMFuzzer :: trace-malloc-unbalanced.test
    LLVMFuzzer :: value-profile-cmp.test
    LLVMFuzzer :: value-profile-load.test
    LLVMFuzzer :: value-profile-mem.test
    LLVMFuzzer :: value-profile-set.test
    LLVMFuzzer :: value-profile-strcmp.test
    LLVMFuzzer :: value-profile-strncmp.test

  Expected Passes    : 90
  Unsupported Tests  : 6
  Unexpected Failures: 19


libFuzzer Failed cases (make check-fuzzer):
I. kernel panic
  fuzzer-oom.test kills the kernel (panic due to lack of memory)

  workaround: kill it quickly or disable

II. hangs
  fuzzer-timeout.test
  value-profile*

  workaround: kill with pkill(1) or kill(1)

III. SanitizerCoverage tests
  At least 'trace-cmp' ones don't work for unknown reason.

IV. Unknown
  the rest

TODO:
 - oom-killer, research a crasher and share with kernel developers
 - oom-killer, add a new ATF test to check oom-killer
 - upstream semaphore fixes to reviews.llvm.org
 - getrusage(2) fix pullup to -8 or find a workaround for 8.0
