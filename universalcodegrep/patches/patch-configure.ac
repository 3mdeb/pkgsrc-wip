$NetBSD$

Disable broken script(1) test.
https://github.com/gvansickle/ucg/issues/99

--- configure.ac.orig	2016-09-30 13:40:33.000000000 +0000
+++ configure.ac
@@ -126,23 +126,23 @@ AS_IF([ test "x$ac_path_ESED_found" = "x
 # The testsuite needs a way to invoke "script", to fool ucg into thinking it's outputting to a tty.
 # Of course, Linux and *BSD (including OSX) "script"'s take different options and parameters, so we
 # try to sort it out here.
-AC_PATH_PROG([PROG_SCRIPT], [script], [:])
-AC_MSG_CHECKING([$PROG_SCRIPT's command line type])
-AS_IF([$PROG_SCRIPT -qfc "echo hello" /dev/null > /dev/null 2>&1],
-		[
-		AC_SUBST([PROG_SCRIPT_TYPE], [linux])
-		AC_SUBST([PROG_SCRIPT_PRE_TEXT], ['-qfc'])
-		AC_SUBST([PROG_SCRIPT_POST_TEXT], ['/dev/null'])
-		AC_MSG_RESULT([Linux style])
-		],
-      [$PROG_SCRIPT -q /dev/null echo "hello" > /dev/null 2>&1],
-		[
-		AC_SUBST([PROG_SCRIPT_TYPE], [bsd])
-		AC_SUBST([PROG_SCRIPT_PRE_TEXT], ['-q /dev/null'])
-		AC_SUBST([PROG_SCRIPT_POST_TEXT], [])
-		AC_MSG_RESULT([BSD style])
-		],
-      [AC_MSG_ERROR([could not determine how to invoke $PROG_SCRIPT])])
+#AC_PATH_PROG([PROG_SCRIPT], [script], [:])
+#AC_MSG_CHECKING([$PROG_SCRIPT's command line type])
+#AS_IF([$PROG_SCRIPT -qfc "echo hello" /dev/null > /dev/null 2>&1],
+		#[
+		#AC_SUBST([PROG_SCRIPT_TYPE], [linux])
+		#AC_SUBST([PROG_SCRIPT_PRE_TEXT], ['-qfc'])
+		#AC_SUBST([PROG_SCRIPT_POST_TEXT], ['/dev/null'])
+		#AC_MSG_RESULT([Linux style])
+		#],
+      #[$PROG_SCRIPT -q /dev/null echo "hello" > /dev/null 2>&1],
+		#[
+		#AC_SUBST([PROG_SCRIPT_TYPE], [bsd])
+		#AC_SUBST([PROG_SCRIPT_PRE_TEXT], ['-q /dev/null'])
+		#AC_SUBST([PROG_SCRIPT_POST_TEXT], [])
+		#AC_MSG_RESULT([BSD style])
+		#],
+      #[AC_MSG_ERROR([could not determine how to invoke $PROG_SCRIPT])])
 
 AC_PROG_MKDIR_P
 AC_PROG_EGREP
