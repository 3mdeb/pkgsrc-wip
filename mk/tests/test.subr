#! /bin/sh
set -eu

step() {
	echo "" 1>&2
	echo "T: $*" 1>&2
}

die() {
	echo "E: $*" 1>&2
	exit 1
}

# There didn't seem to be a pre-built tool doing this.
cvs_admin_set_date() {
	awk	'
		BEGIN { FS = "\t"; OFS = FS }
		now && $1 == "date" { now = 0; $2 = "'"$3"';" }
		$0 == "'"$2"'" { now = 1 }
		{ print }
		' \
		"$1" > "$1.tmp"
	mv -f "$1.tmp" "$1"
}

setup_package() {
	pkgsrcdir=`cd "$PWD/../../.." && exec pwd`
	test -f "$pkgsrcdir/mk/bsd.pkg.mk" || die "This test must be run from inside pkgsrc"

	pkgdir="$pkgsrcdir/mk-scm-tests/mk-scm-tests"
	rm -rf "$pkgdir"
	mkdir -p "$pkgdir"
	cp "$1" "$pkgdir/Makefile"
	echo "Dummy description." > "$pkgdir/DESCR"
	echo "@comment $""NetBSD""$" > "$pkgdir/PLIST"
	cd "$pkgdir"

	repodir="$pkgdir/files/repo"
	mkdir -p "${repodir%/*}"

	tmpdir="$pkgdir/tmp"
	mkdir -p "$tmpdir"

	wrkdir=`package_make show-var VARNAME=WRKDIR`
}

# The standard test repository contains these commits:
# - at 2017-01-01TZ, the file "today" contains "2017-01-01".
#   - this commit is tagged v2017.
# - at 2018-01-01TZ, the file "today" contains "2018-01-01".
# - at 2018-03-01TZ, the file "today" contains "2018-03-01".

setup_cvs_repository() {
	cvs -d "$repodir" init
	mkdir "$repodir/pkgbase"

	cvs -d "$repodir" checkout -d "$tmpdir/pkgbase" "pkgbase"
	cd "$tmpdir/pkgbase"

	echo "2017-01-01" > today
	cvs add today
	cvs commit -m "today is 2017-01-01" today
	cvs_admin_set_date "$repodir/pkgbase/today,v" "1.1" "2017.01.01.00.00.00"
	cvs tag v2017 .

	echo "2018-01-01" > today
	cvs commit -m "today is 2018-01-01" today
	cvs_admin_set_date "$repodir/pkgbase/today,v" "1.2" "2018.01.01.00.00.00"

	echo "2018-03-01" > today
	cvs commit -m "today is 2018-03-01" today
	cvs_admin_set_date "$repodir/pkgbase/today,v" "1.3" "2018.03.01.00.00.00"
}

setup_fossil_repository() {
	mkdir -p "$repodir"
	cd "$repodir"
	fossil init --date-override "2017-01-01" pkgbase.fossil
	fossil open "pkgbase.fossil"

	echo "2017-01-01" > today
	fossil add today
	fossil commit -m "today is 2017-01-01" --date-override "2017-01-01" --hash -- today
	fossil tag add --date-override "2017-01-01 00:00:01" v2017 tip

	echo "2018-01-01" > today
	fossil add today
	fossil commit -m "today is 2018-01-01" --date-override "2018-01-01" --hash -- today

	echo "2018-03-01" > today
	fossil commit -m "today is 2018-03-01" --date-override "2018-03-01" --hash -- today
}

setup_git_repository() {
	git init "$repodir/pkgbase"
	cd "$repodir/pkgbase"

	echo "2017-01-01" > today
	git add today
	GIT_AUTHOR_DATE="2017-01-01T00:00:00Z" GIT_COMMITTER_DATE="2017-01-01T00:00:00Z" \
		git commit -m "today is 2017-01-01" -- today
	git tag v2017

	echo "2018-01-01" > today
	git add today
	GIT_AUTHOR_DATE="2018-01-01T00:00:00Z" GIT_COMMITTER_DATE="2018-01-01T00:00:00Z" \
		git commit -m "today is 2018-01-01" -- today

	echo "2018-03-01" > today
	GIT_AUTHOR_DATE="2018-03-01T00:00:00Z" GIT_COMMITTER_DATE="2018-03-01T00:00:00Z" \
		git commit -m "today is 2018-03-01" -- today
}

setup_hg_repository() {
	hg init "$repodir/pkgbase"
	cd "$repodir/pkgbase"

	echo "2017-01-01" > today
	hg add today
	hg commit -m "today is 2017-01-01" -d "2017-01-01T00:00:00Z" -u "user" -- today
	hg tag -u "user" v2017

	echo "2018-01-01" > today
	hg commit -m "today is 2018-01-01" -d "2018-01-01T00:00:00Z" -u "user" -- today

	echo "2018-03-01" > today
	hg commit -m "today is 2018-03-01" -d "2018-03-01T00:00:00Z" -u "user" -- today
}

setup_svn_repository() {
	mkdir "$repodir"
	svnadmin create "$repodir/pkgbase"
	hook="$repodir/pkgbase/hooks/pre-revprop-change"
	printf '%s\n' '#! /bin/sh' '# allow everything' > "$hook"
	chmod +x "$hook"
	svn checkout "file://$repodir/pkgbase" "$tmpdir/svnwork"
	cd "$tmpdir/svnwork"
	mkdir "trunk"
	cd "trunk"

	echo "2017-01-01" > today
	svn add .
	svn commit -m "today is 2017-01-01"
	svn propset "svn:date" --revprop -r HEAD "2017-01-01T00:00:00.000000Z"

	svn -m "v2017" --parents copy "file://$repodir/pkgbase/trunk" "file://$repodir/pkgbase/tags/v2017"
	svn propset "svn:date" --revprop -r HEAD "2017-01-01T00:00:00.000001Z"

	echo "2018-01-01" > today
	svn commit -m "today is 2018-01-01"
	svn propset "svn:date" --revprop -r HEAD "2018-01-01T00:00:00.000000Z"

	echo "2018-03-01" > today
	svn commit -m "today is 2018-03-01"
	svn propset "svn:date" --revprop -r HEAD "2018-03-01T00:00:00.000000Z"
}

package_make() {
	cd "$pkgdir"
	bmake=`type "bmake" 1>/dev/null 2>&1 && echo "bmake" || echo "make"`
	DISTDIR="$tmpdir/distfiles" "$bmake" "$@"
}

assert_that() {
	case "${1-}${3+:}${3-}${5+:}${5-}${7+:}${7-}" in
	("--file:--has-content")
		actual=`cat "$2"`
		[ "$4" = "$actual" ] || die "expected file $2 to contain \"$4\", but found \"$actual\"."
		;;
	(*)	die "assert_that called with invalid arguments: $*"
	esac
}

test_scm() {
	case "$1" in
	(cvs)		scm_display_name="CVS"		scm_tag_varname="CVS_TAG"	;;
	(fossil)	scm_display_name="Fossil"	scm_tag_varname="FOSSIL_VERSION";;
	(git)		scm_display_name="Git"		scm_tag_varname="GIT_TAG"	;;
	(hg)		scm_display_name="Mercurial"	scm_tag_varname="HG_TAG"	;;
	(svn)		scm_display_name="Subversion"	scm_tag_varname="SVN_REVISION"	;;
	esac

	step "Setting up $scm_display_name repository"
	rm -rf "$repodir"
	setup_${1}_repository
	wrkdir=`pkgsrc_make show-var VARNAME=WRKDIR`

	: step "Dumping API variables for $scm_display_name (for manual inspection)"
	: SCM_UNDER_TEST="$1" pkgsrc_make clean
	: SCM_UNDER_TEST="$1" pkgsrc_make "show-all-$1"
	:
	: "needs to be inspected manually"

	step "Testing $scm_display_name"
	: pkgsrc_make clean
	PKG_DEBUG_LEVEL=0 pkgsrc_make -f "$1-1-single.mk" clean
	PKG_DEBUG_LEVEL=0 pkgsrc_make -f "$1-1-single.mk" build
	#PKG_DEBUG_LEVEL=0 pkgsrc_make -f "$1-1-single.mk" do-build
	exit 1
	:
	assert_that --file "$wrkdir/pkgbase/today" --has-content "2018-03-01"
	assert_that --file "$wrkdir/2017/today"    --has-content "2017-01-01"
	assert_that --file "$wrkdir/current/today" --has-content "2018-03-01"

	step "Testing $scm_display_name with CHECKOUT_DATE"
	SCM_UNDER_TEST="$1" pkgsrc_make clean
	SCM_UNDER_TEST="$1" CHECKOUT_DATE="2018-02-01" pkgsrc_make patch
	:
	assert_that --file "$wrkdir/pkgbase/today" --has-content "2018-01-01"

	step "Testing $scm_display_name with tagged checkout"
	SCM_UNDER_TEST="$1" pkgsrc_make clean
	tag_value="v2017"; test "$1" = "svn" && tag_value="1"
	eval "SCM_UNDER_TEST=\"\$1\" $scm_tag_varname=\"\$tag_value\" pkgsrc_make patch"
	:
	assert_that --file "$wrkdir/pkgbase/today" --has-content "2017-01-01"

	SCM_UNDER_TEST="$1" pkgsrc_make clean
}
