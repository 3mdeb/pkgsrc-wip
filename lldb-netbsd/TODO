Debugging to a file:
    log enable -STagnpstv -f /tmp/log.txt lldb all

Debugging GDB remote protocol commands:
    log enable gdb-remote packets

    https://sourceware.org/gdb/onlinedocs/gdb/Remote-Protocol.html

Debugging with gdb(1):
    Start the server:
        gdb --args lldb-server g *:1234 -- ./signal

    Start the client:
        lldb
    Inside it:
        process connect connect://localhost:1234


Introduce objc++ setup with gcc(1) for "make test":
    Build Command Output:
    g++: error trying to exec 'cc1objplus': execvp: No such file or directory
    g++: error trying to exec 'cc1objplus': execvp: No such file or directory
    gmake[4]: *** [main.o] Error 1

llvm::call_once hack for src:
   curl https://github.com/jsonn/src/commit/78f4ee4c8349d68cf2279f2c7fc2196ae369e182.patch|gpatch -R -p1

Short-term goals in current milestone
=====================================
Done:
 - switch resolution of pid -> path to executable from /proc to sysctl(7)
   https://reviews.llvm.org/D29089
   committed as SVN revision 293392
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293392
 - recognize Real-Time Signals (SIGRTMIN-SIGRTMAX)
   https://reviews.llvm.org/D29091
   committed as SVN revision 293391
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293391
 - fix conflict with system-wide py-six
   "Install six.py copy into subdirectory lldb"
   renamed to
   "Install six.py conditionally"
   https://reviews.llvm.org/D29405
   committed as SVN 294071
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=294071

Unscheduled done
 - signal issues PR/51918 and added tests signal{1,2,3,4,5,6,7,8,9,10}

In progress:
 - add support for auxv read operation
   added test io_read_auxv1
 - upstream !NetBSDProcessPlugin code
   "Do not pass non-POD type variables through variadic function"
   https://reviews.llvm.org/D29256
   committed as SVN revision 293774
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293774

   "Add NetBSD support in Host::GetCurrentThreadID"
   https://reviews.llvm.org/D29264
   committed as SVN revision 293625
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293625

   "Synchronize PlatformNetBSD with Linux"
   https://reviews.llvm.org/D29266

   "Add ProcessLauncherNetBSD to spawn a tracee"
   renamed to:
   "Transform ProcessLauncherLinux to ProcessLauncherPosixFork"
   https://reviews.llvm.org/D29347
   committed as SVN 293768
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293768

   "Document that LaunchProcessPosixSpawn is used on NetBSD"
   committed as SVN 293770
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293770
 - switch std::call_once to llvm::call_once
   lldb-netbsd works with base libstdc++ with local patches

   "Switch std::call_once to llvm::call_once"
   https://reviews.llvm.org/D29288

   "Make llvm::call_once more convenient to reuse out of LLVM"
   https://reviews.llvm.org/D29296

Unscheduled in progress:
 - investigate and address false-positives in "check-lldb"
   "Fix multi-process-driver.cpp build on NetBSD"
   https://reviews.llvm.org/D29403
   committed as SVN 293895
   http://llvm.org/viewvc/llvm-project/?view=rev&revision=293895

TODO:
 + ptrace(2) interface to lock and unlock threads from execution
 + switch the current PT_WATCHPOINT interface to PT_GETDBREGS and PT_SETDBREGS

To be done later
================
 - registers' accessors
 - single step support
 - thread resume/suspend operation
 - i386 support
 - upstream NetBSD support
 - adapt upstream Python tests to run on NetBSD and pass as many of them as
   possible
 - import LLDB into base
 - add NetBSD specific ATF tests verifying fundamental functionality of LLDB

and of course fix as many bugs as possible
