$NetBSD: patch-CMakeLists.txt,v 1.1 2015/09/05 14:50:45 yhardy Exp $

XXX remove on next release

commit 26494f38200af62fd3034528740b791e2a021af5
Author: Sven Hesse
Date:   Wed Sep 2 22:51:51 2015 +0200

    BUILD: Use FindIconv CMake file to detect iconv() signature
    
    This will now hopefully correctly detects whether iconv() wants const
    or not automatically.

commit 3d05549687831296a0ce75a04bc89935ceec9d63
Author: Sven Hesse
Date:   Sat Aug 1 19:54:56 2015 +0200

    BUILD: Fix adding ".dirty" in CMake builds
    
    Unless I'm mistaken, the '|| echo ".dirty"' seems to make it so that
    ".dirty" is always attached, because it modifies the exit code.
    
    At least echoing XOREOS_REVDIRT right after the execute_process
    suggests that. With the '|| echo ".dirty"', it's always 128 for me, no
    matter if the tree is dirty or not. Without, it evaluates to either 0
    or 1, correctly showing the dirty-state.

commit 24c1de92e78f1e608d7311102d5c12af54740f12
Author: cc9cii
Date:   Sat Aug 1 07:08:14 2015 +1000

    BUILD: Add CMake modules for Windows and add MSVC specific settings
    
    Includes fixes after berenm's review comments (see https://github.com/cc9cii/xoreos/commit/4a436114ea6663e86fb57bd3f03bff8c583039b8)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 59e85c3..9bb108a 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -18,7 +18,7 @@ if(CMAKE_HOST_APPLE)
   add_definitions(-DUNIX -DMACOSX)
 
 elseif(CMAKE_HOST_UNIX)
-  add_definitions(-DUNIX -DICONV_CONST=)
+  add_definitions(-DUNIX)
 
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -Wno-unused-parameter -fdata-sections -ffunction-sections -fno-show-column -std=c++11")
 
@@ -30,7 +30,10 @@ elseif(CMAKE_HOST_UNIX)
   string(REPLACE "<LINK_LIBRARIES>" "-Wl,--start-group <LINK_LIBRARIES> -Wl,--end-group" CMAKE_C_CREATE_SHARED_MODULE "${CMAKE_C_CREATE_SHARED_MODULE}")
   string(REPLACE "<LINK_LIBRARIES>" "-Wl,--start-group <LINK_LIBRARIES> -Wl,--end-group" CMAKE_CXX_CREATE_SHARED_MODULE "${CMAKE_CXX_CREATE_SHARED_MODULE}")
 elseif(CMAKE_HOST_WIN32)
-  add_definitions(-DICONV_CONST=)
+  if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
+    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /NODEFAULTLIB:libcmt.lib")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
+  endif()
 else()
   message(STATUS "Unknown platform, maybe not supported")
 endif()
@@ -42,6 +45,42 @@ if(CMAKE_HOST_WIN32)
   else()
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
   endif()
+  if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
+    set(WARNINGS_DISABLE
+      # ignore
+      4250 # 'class1' : inherits 'class2::member' via dominance
+      #4101 # 'identifier' : unreferenced local variable
+      4100 # 'identifier' : unreferenced formal parameter
+      4127 # conditional expression is constant (template parameter already evaluated)
+      4189 # 'identifier' : local variable is initialized but not referenced
+      4245 # 'conversion' : conversion from 'type1' to 'type2', signed/unsigned mismatch
+      4435 # 'class1' : Object layout under /vd2 will change due to virtual base 'class2'
+      4510 # 'class' : default constructor could not be generated
+      4512 # 'class' : assignment operator could not be generated
+      4610 # object 'class' can never be instantiated - user-defined constructor required
+      #4702 # unreachable code
+      4706 # assignment within conditional expression
+      4710 # 'function' : function not inlined
+      4714 # function 'function' marked as __forceinline not inlined
+
+      # investigate later
+      4305 # 'identifier' : truncation from 'type1' to 'type2'
+      4244 # 'argument' : conversion from 'type1' to 'type2', possible loss of data
+      4267 # 'var' : conversion from 'size_t' to 'type', possible loss of data
+      4996 # 'function': was declared deprecated
+
+      # investigate now
+      #4005 # 'identifier' : macro redefinition
+      #4800 # 'type' : forcing value to bool 'true' or 'false' (performance warning)
+      #4146 # unary minus operator applied to unsigned type, result still unsigned
+      )
+
+    foreach(d ${WARNINGS_DISABLE})
+      set(WARNINGS "${WARNINGS} /wd${d}")
+    endforeach(d)
+
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNINGS} ${MT_BUILD}")
+  endif()
 else()
   set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -Wall -Wno-multichar -Wpointer-arith -Wshadow")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-multichar -Wpointer-arith -Wshadow -Wnon-virtual-dtor")
@@ -76,7 +115,7 @@ check_has_function(strtoll  "cstdlib" HAVE_STRTOLL)
 check_has_function(strtoull "cstdlib" HAVE_STRTOULL)
 
 
-# endianess detection, could be replaced by including Boost.Config 
+# endianess detection, could be replaced by including Boost.Config
 include(TestBigEndian)
 test_big_endian(XOREOS_BIG_ENDIAN)
 if(XOREOS_BIG_ENDIAN)
@@ -101,7 +140,10 @@ find_package(ZLIB REQUIRED)
 include_directories(${ZLIB_INCLUDE_DIRS})
 list(APPEND XOREOS_LIBRARIES ${ZLIB_LIBRARIES})
 
+option(Boost_USE_STATIC_LIBS ON)
+
 find_package(Boost COMPONENTS system filesystem regex date_time atomic locale REQUIRED)
+
 include_directories(${Boost_INCLUDE_DIRS})
 list(APPEND XOREOS_LIBRARIES ${Boost_LIBRARIES})
 
@@ -130,6 +172,10 @@ find_package(Faad REQUIRED)
 include_directories(${FAAD_INCLUDE_DIRS})
 list(APPEND XOREOS_LIBRARIES ${FAAD_LIBRARIES})
 
+find_package(Ogg REQUIRED)
+include_directories(${OGG_INCLUDE_DIRS})
+list(APPEND XOREOS_LIBRARIES ${OGG_LIBRARIES})
+
 find_package(Vorbis REQUIRED)
 include_directories(${VORBIS_INCLUDE_DIRS})
 list(APPEND XOREOS_LIBRARIES ${VORBIS_LIBRARIES})
@@ -146,6 +192,15 @@ find_package(LibXml2 REQUIRED)
 include_directories(${LIBXML2_INCLUDE_DIR})
 list(APPEND XOREOS_LIBRARIES ${LIBXML2_LIBRARIES})
 
+find_package(Iconv REQUIRED)
+include_directories(${ICONV_INCLUDE_DIRS})
+list(APPEND XOREOSTOOLS_LIBRARIES ${ICONV_LIBRARIES})
+
+if(ICONV_SECOND_ARGUMENT_IS_CONST)
+  add_definitions(-DICONV_CONST=const)
+else(ICONV_SECOND_ARGUMENT_IS_CONST)
+  add_definitions(-DICONV_CONST=)
+endif(ICONV_SECOND_ARGUMENT_IS_CONST)
 
 find_package(GLEW)
 if(NOT GLEW_FOUND)
@@ -182,12 +237,12 @@ set_property(SOURCE src/common/version.cpp APPEND PROPERTY COMPILE_DEFINITIONS X
 
 find_package(Git)
 if(GIT_FOUND)
-  execute_process(COMMAND ${GIT_EXECUTABLE} describe --long --match desc/* OUTPUT_VARIABLE XOREOS_REVDESC OUTPUT_STRIP_TRAILING_WHITESPACE)
+  execute_process(COMMAND ${GIT_EXECUTABLE} -C ${CMAKE_CURRENT_SOURCE_DIR} describe --long --match desc/* OUTPUT_VARIABLE XOREOS_REVDESC OUTPUT_STRIP_TRAILING_WHITESPACE)
   string(REGEX REPLACE "desc/(.*)-([^-]*)-([^-]*)" "\\1+\\2.\\3" XOREOS_REVDESC "${XOREOS_REVDESC}")
 
   execute_process(
     COMMAND ${GIT_EXECUTABLE} update-index --refresh --unmerged
-    COMMAND ${GIT_EXECUTABLE} diff-index --quiet HEAD || echo ".dirty"
+    COMMAND ${GIT_EXECUTABLE} diff-index --quiet HEAD
     OUTPUT_QUIET ERROR_QUIET
     RESULT_VARIABLE XOREOS_REVDIRT
   )
